{
  "address": "0x4F617b7Dd233552eBef69ECfF646f5A53A618550",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_portalToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "blockchainName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "blockchainAddress",
          "type": "string"
        }
      ],
      "name": "AssetExists",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "id",
          "type": "address"
        }
      ],
      "name": "AssetCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "id",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "logo",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "blockchainId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "blockchainName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "blockchainAddress",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "blockchainDecimals",
              "type": "uint8"
            }
          ],
          "internalType": "struct IAsset.AssetData",
          "name": "_asset",
          "type": "tuple"
        }
      ],
      "name": "createAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "listAssets",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "id",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "logo",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "blockchainId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "blockchainName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "blockchainAddress",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "blockchainDecimals",
              "type": "uint8"
            }
          ],
          "internalType": "struct IAsset.AssetData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "portalToken",
      "outputs": [
        {
          "internalType": "contract IPortalToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "id",
          "type": "address"
        }
      ],
      "name": "retrieveAsset",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "id",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "logo",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "blockchainId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "blockchainName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "blockchainAddress",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "blockchainDecimals",
              "type": "uint8"
            }
          ],
          "internalType": "struct IAsset.AssetData",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "blockchainName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "blockchainAddress",
          "type": "string"
        }
      ],
      "name": "retrieveAssetByNativeProps",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "id",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "logo",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "blockchainId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "blockchainName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "blockchainAddress",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "blockchainDecimals",
              "type": "uint8"
            }
          ],
          "internalType": "struct IAsset.AssetData",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x59c5ed09fc0f68f23d85bd6ddcffca1a5ebd5b598d76e3c504ad060d2bf3325c",
  "receipt": {
    "to": null,
    "from": "0xecF71FaeDabB5f47D3cC386Eaa45A41f29B8A7eb",
    "contractAddress": "0x4F617b7Dd233552eBef69ECfF646f5A53A618550",
    "transactionIndex": 0,
    "gasUsed": "2282498",
    "logsBloom": "0x
    "blockHash": "0xe627a8db9169e2c0b9d181f4921e8480bab4768f54197f2f5caeb0c2230238a0",
    "transactionHash": "0x59c5ed09fc0f68f23d85bd6ddcffca1a5ebd5b598d76e3c504ad060d2bf3325c",
    "logs": [],
    "blockNumber": 311950,
    "cumulativeGasUsed": "2282498",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x742f24592459e189f520214E2f2110C4528d784c"
  ],
  "numDeployments": 1,
  "solcInputHash": "2fd20d911d8de013566405c6f17dd1a7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_portalToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"blockchainName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"blockchainAddress\",\"type\":\"string\"}],\"name\":\"AssetExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"}],\"name\":\"AssetCreated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"logo\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockchainId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"blockchainName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"blockchainAddress\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"blockchainDecimals\",\"type\":\"uint8\"}],\"internalType\":\"struct IAsset.AssetData\",\"name\":\"_asset\",\"type\":\"tuple\"}],\"name\":\"createAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listAssets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"logo\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockchainId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"blockchainName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"blockchainAddress\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"blockchainDecimals\",\"type\":\"uint8\"}],\"internalType\":\"struct IAsset.AssetData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"portalToken\",\"outputs\":[{\"internalType\":\"contract IPortalToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"}],\"name\":\"retrieveAsset\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"logo\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockchainId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"blockchainName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"blockchainAddress\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"blockchainDecimals\",\"type\":\"uint8\"}],\"internalType\":\"struct IAsset.AssetData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"blockchainName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"blockchainAddress\",\"type\":\"string\"}],\"name\":\"retrieveAssetByNativeProps\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"id\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"logo\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockchainId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"blockchainName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"blockchainAddress\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"blockchainDecimals\",\"type\":\"uint8\"}],\"internalType\":\"struct IAsset.AssetData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AssetExists(string,string)\":[{\"params\":{\"blockchainAddress\":\"Address of the asset on the native blockchain\",\"blockchainName\":\"Name of the native blockchain\"}}],\"NotOwner(address)\":[{\"params\":{\"sender\":\"The address of the account calling the function\"}}]},\"events\":{\"AssetCreated(address)\":{\"params\":{\"id\":\"The address of the asset on the portal chain\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_portalToken\":\"Address of the PORTAL token contract on portal chain\"}},\"listAssets()\":{\"returns\":{\"_0\":\"The list of all assets in the order they were created\"}},\"retrieveAsset(address)\":{\"params\":{\"id\":\"The address of the asset on the portal chain\"},\"returns\":{\"_0\":\"The asset whose id was provided\"}},\"retrieveAssetByNativeProps(string,string)\":{\"params\":{\"blockchainAddress\":\"Address of the asset on the native blockchain\",\"blockchainName\":\"Name of the native blockchain\"},\"returns\":{\"_0\":\"The asset whose native blockchain properties were provided\"}}},\"title\":\"AssetManagement Manages assets in the Portal ecosystem. Assets in the Portal ecosystem are immutable and may not be updated or deleted once created. The contract maintains a list of all assets created in the order they were created. It also maintains a mapping of assets by their native blockchain name and address to enable quick lookups of assets based on native blockchain details.\",\"version\":1},\"userdoc\":{\"errors\":{\"AssetExists(string,string)\":[{\"notice\":\"Thrown when an asset has already been created\"}],\"NotOwner(address)\":[{\"notice\":\"Thrown when the caller is not the owner of the contract\"}]},\"events\":{\"AssetCreated(address)\":{\"notice\":\"Fires when a new asset is created\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initializes the asset management contract\"},\"createAsset((address,string,string,string,uint256,string,string,uint8))\":{\"notice\":\"Creates a new asset. NOTE: This method is only callable by the owner of the contract.\"},\"listAssets()\":{\"notice\":\"Lists all assets on the portal chain in the order they were created\"},\"portalToken()\":{\"notice\":\"Address of the PORTAL Token contract on portal chain\"},\"retrieveAsset(address)\":{\"notice\":\"Retrieves the specified asset\"},\"retrieveAssetByNativeProps(string,string)\":{\"notice\":\"Retrieves an asset using native blockchain properties\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AssetManagement.sol\":\"AssetManagement\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/Asset.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n// solhint-disable-next-line compiler-version\\npragma solidity ^0.8.20;\\n\\nimport {IAsset} from \\\"./interfaces/IAsset.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\n/**\\n * @title Asset\\n * The Asset contract represents an asset with specific attributes and\\n * restrictions. It inherits from the ERC20 standard and includes additional\\n * metadata for asset management.\\n *\\n * An asset is a representation of a tradable token on the portal chain, and\\n * is modeled similar to an ERC-20 token, with additional metadata, namely:\\n * - The name of the native blockchain.\\n * - The chain-id of the native blockchain, relevant only for EVM chains.\\n * - The address of the ERC20 contract asset on the native blockchain.\\n * - The number of decimals used by the asset on its native blockchain.\\n * - The logo of the asset as a SVG string.\\n */\\ncontract Asset is IAsset, ERC20 {\\n    AssetData private asset;\\n\\n    /**\\n     * Initializes the contract setting the Asset Details\\n     * @param _asset Properties of the asset\\n     */\\n    constructor(\\n        IAsset.AssetData memory _asset\\n    ) ERC20(_asset.name, _asset.symbol) {\\n        asset = AssetData({\\n            id: address(this),\\n            name: _asset.name,\\n            symbol: _asset.symbol,\\n            logo: _asset.logo,\\n            blockchainId: _asset.blockchainId,\\n            blockchainName: _asset.blockchainName,\\n            blockchainAddress: _asset.blockchainAddress,\\n            blockchainDecimals: _asset.blockchainDecimals\\n        });\\n    }\\n\\n    /**\\n     * Returns the address of the asset on the portal blockchain\\n     */\\n    function id() public view returns (address) {\\n        return asset.id;\\n    }\\n\\n    /**\\n     * Returns the decimals used by the asset on its native blockchain\\n     */\\n    function decimals() public view override returns (uint8) {\\n        return asset.blockchainDecimals;\\n    }\\n\\n    /**\\n     * Returns all the properties of the asset. This is primarily used to return\\n     * data in JSON format to the JavaScript layer.\\n     */\\n    function toAssetData() public view returns (AssetData memory) {\\n        return asset;\\n    }\\n}\\n\",\"keccak256\":\"0x9b1f13f0bd7084c32530bda098178dae80ca93baea774cebd96de146c42c2bbb\",\"license\":\"BUSL-1.1\"},\"contracts/AssetManagement.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n// solhint-disable-next-line compiler-version\\npragma solidity ^0.8.20;\\n\\nimport \\\"./interfaces/IPortalToken.sol\\\";\\nimport {IAssetManagement} from \\\"./interfaces/IAssetManagement.sol\\\";\\nimport {Asset} from \\\"./Asset.sol\\\";\\nimport {IAsset} from \\\"./interfaces/IAsset.sol\\\";\\n\\n/**\\n * @title AssetManagement\\n * Manages assets in the Portal ecosystem. Assets in the Portal ecosystem are\\n * immutable and may not be updated or deleted once created. The contract\\n * maintains a list of all assets created in the order they were created. It\\n * also maintains a mapping of assets by their native blockchain name and\\n * address to enable quick lookups of assets based on native blockchain details.\\n */\\ncontract AssetManagement is IAssetManagement {\\n    /**\\n     * @notice Address of the PORTAL Token contract on portal chain\\n     */\\n    IPortalToken public portalToken;\\n\\n    /**\\n     * @notice Maintains a count of the number of assets on portal chain\\n     */\\n    uint256 private assetCount;\\n\\n    /**\\n     * @notice List of all assets in the order they were created\\n     */\\n    Asset[] private assets;\\n\\n    /**\\n     * @notice Mapping to check if an asset already exists\\n     */\\n    mapping(string => mapping(string => bool)) private existingAssets;\\n\\n    /**\\n     * @notice Assets indexed by native blockchain name and address\\n     */\\n    mapping(string => mapping(string => Asset)) private assetsByNativeProps;\\n\\n    /**\\n     * Initializes the asset management contract\\n     * @param _portalToken Address of the PORTAL token contract on portal chain\\n     */\\n    constructor(address _portalToken) {\\n        portalToken = IPortalToken(_portalToken);\\n    }\\n\\n    /**\\n     * Modifier that restricts the execution of the function to only the\\n     * current owners of the contract. It reverts the transaction if the\\n     * condition is not met.\\n     */\\n    modifier onlyOwner() {\\n        if (msg.sender != portalToken.owner()) revert NotOwner(msg.sender);\\n        _;\\n    }\\n\\n    /**\\n     * @inheritdoc IAssetManagement\\n     */\\n    function createAsset(IAsset.AssetData calldata _asset) external onlyOwner {\\n        address id = _asset.id;\\n        require(id == address(0), \\\"INVALID_ASSET_ID\\\");\\n\\n        string memory blockchainName = _asset.blockchainName;\\n        string memory blockchainAddress = _asset.blockchainAddress;\\n        if (existingAssets[blockchainName][blockchainAddress]) {\\n            revert AssetExists(blockchainName, blockchainAddress);\\n        }\\n\\n        Asset asset = new Asset(_asset);\\n\\n        assets.push(asset);\\n        assetCount++;\\n\\n        existingAssets[blockchainName][blockchainAddress] = true;\\n        assetsByNativeProps[blockchainName][blockchainAddress] = asset;\\n\\n        emit AssetCreated(asset.id());\\n    }\\n\\n    /**\\n     * @inheritdoc IAssetManagement\\n     */\\n    function retrieveAsset(\\n        address id\\n    ) external view returns (IAsset.AssetData memory) {\\n        return Asset(id).toAssetData();\\n    }\\n\\n    /**\\n     * @inheritdoc IAssetManagement\\n     */\\n    function retrieveAssetByNativeProps(\\n        string memory blockchainName,\\n        string memory blockchainAddress\\n    ) external view returns (IAsset.AssetData memory) {\\n        Asset asset = assetsByNativeProps[blockchainName][blockchainAddress];\\n        return asset.toAssetData();\\n    }\\n\\n    /**\\n     * @inheritdoc IAssetManagement\\n     */\\n    function listAssets() external view returns (IAsset.AssetData[] memory) {\\n        IAsset.AssetData[] memory _assets = new IAsset.AssetData[](assetCount);\\n        for (uint256 i = 0; i < assetCount; i++) {\\n            _assets[i] = assets[i].toAssetData();\\n        }\\n        return _assets;\\n    }\\n}\\n\",\"keccak256\":\"0x40650172337f7028ae87d3a863318e584cb43d516d536d238b531b5256bf659e\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IAsset.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n// solhint-disable-next-line compiler-version\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title IAsset\\n * Interface for the Asset contract that defines all tradable assets in the\\n * Portal ecosystem.\\n */\\ninterface IAsset {\\n    /**\\n     * Stores the particulars of an asset.\\n     * @param id Address of the asset on the portal chain\\n     * @param name Human-readable name of the asset\\n     * @param symbol Ticker symbol of the asset\\n     * @param logo Logo of the asset as a SVG string\\n     * @param blockchainId Chain-ID of the native blockchain\\n     * @param blockchainName Name of the native blockchain\\n     * @param blockchainAddress Address of the asset on the native blockchain\\n     * @param blockchainDecimals Number of decimals used by the asset\\n     */\\n    struct AssetData {\\n        address id;\\n        string name;\\n        string symbol;\\n        string logo;\\n        uint256 blockchainId;\\n        string blockchainName;\\n        string blockchainAddress;\\n        uint8 blockchainDecimals;\\n    }\\n}\\n\",\"keccak256\":\"0xac47817d6ee449e708a02b7ec9225f0d21b6b7111f4653c8306f607af9ec99cc\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IAssetManagement.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n// solhint-disable-next-line compiler-version\\npragma solidity ^0.8.20;\\n\\nimport \\\"./IAsset.sol\\\";\\nimport \\\"../Asset.sol\\\";\\n\\n/**\\n * @title IAssetManagement\\n * Interface to manage assets in the Portal ecosystem\\n */\\ninterface IAssetManagement {\\n    /**\\n     * Creates a new asset.\\n     * NOTE: This method is only callable by the owner of the contract.\\n     */\\n    function createAsset(IAsset.AssetData calldata asset) external;\\n\\n    /**\\n     * Retrieves the specified asset\\n     * @param id The address of the asset on the portal chain\\n     * @return The asset whose id was provided\\n     */\\n    function retrieveAsset(\\n        address id\\n    ) external view returns (IAsset.AssetData memory);\\n\\n    /**\\n     * Retrieves an asset using native blockchain properties\\n     * @param blockchainName Name of the native blockchain\\n     * @param blockchainAddress Address of the asset on the native blockchain\\n     * @return The asset whose native blockchain properties were provided\\n     */\\n    function retrieveAssetByNativeProps(\\n        string memory blockchainName,\\n        string memory blockchainAddress\\n    ) external view returns (IAsset.AssetData memory);\\n\\n    /**\\n     * Lists all assets on the portal chain in the order they were created\\n     * @return The list of all assets in the order they were created\\n     */\\n    function listAssets() external view returns (IAsset.AssetData[] memory);\\n\\n    /**\\n     * Fires when a new asset is created\\n     * @param id The address of the asset on the portal chain\\n     */\\n    event AssetCreated(address indexed id);\\n\\n    /**\\n     * Thrown when the caller is not the owner of the contract\\n     * @param sender The address of the account calling the function\\n     */\\n    error NotOwner(address sender);\\n\\n    /**\\n     * Thrown when an asset has already been created\\n     * @param blockchainName Name of the native blockchain\\n     * @param blockchainAddress Address of the asset on the native blockchain\\n     */\\n    error AssetExists(string blockchainName, string blockchainAddress);\\n}\\n\",\"keccak256\":\"0xac33cdcb5d9d46419772eaccc84d736a978783b7f2be07772da9523cf23587e0\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IPortalToken.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title IPortalToken\\n * The Portal Token interface defines functions for the PORTAL token with\\n * respect to the auction process for validators. This contract is relevant on\\n * the Portal chain.\\n */\\ninterface IPortalToken is IERC20 {\\n    /**\\n     * @dev Returns the address of the owner of the PORTAL Token contract. This\\n     * should be the address of the Portal Foundation.\\n     */\\n    function owner() external view returns (address);\\n\\n    /**\\n     * Returns the number of tokens locked by a potential validator (bidder)\\n     * @param _user Address of the potential validator (bidder)\\n     * @return The number of tokens locked by the potential validator (bidder)\\n     */\\n    function getLockedTokens(address _user) external view returns (uint);\\n}\\n\",\"keccak256\":\"0xd76da518db488c619b5bd5da945593ca43998f47953bc1cc0ceae4bf7416c2f5\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x60803461007457601f61289238819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b03191691909117905560405161280290816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004803610156200001657600080fd5b600092833560e01c9081631c94c77b1462000876575080634e1d7bac14620008025780635cbf7e551462000711578063caf87b8e14620001e75763eadeb9a3146200006057600080fd5b34620001e35782600319360112620001e357916001908154620000838162000d2b565b946200009285519687620009b9565b818652601f19620000a38362000d2b565b01835b818110620001c3575050825b8281106200011d57505050825192602080850191818652865180935281818701918460051b880101970193905b838210620000ed5786880387f35b909192939483806200010b839a603f198b82030186528951620008e7565b999701959493919091019101620000df565b6001600160a01b03848362000135849a989a62000b24565b919054918a51948593849263f93dc4d960e01b845260031b1c165afa908115620001b95790620001899291869162000192575b5062000175828862000d44565b5262000182818762000d44565b5062000b72565b959395620000b2565b620001b291503d8088833e620001a98183620009b9565b81019062000c21565b3862000168565b87513d87823e3d90fd5b602090620001d398969862000b98565b82828901015201969496620000a6565b8280fd5b509034620001e35760031991602036840181136200070d5781359367ffffffffffffffff808611620007095785840190610100908184893603011262000705576001600160a01b039786868a8c54168a51928380927f8da5cb5b0000000000000000000000000000000000000000000000000000000082525afa908115620006fb57908a918c91620006bb575b501633036200068c578335928984168094036200068857836200062c5790869493929160a4820194620002a8868262000a70565b3690620002b592620009f9565b9560c48401620002c6818462000a70565b3690620002d392620009f9565b998d518a818b8181519e8f92019e8f91620002ee926200089b565b8101600381520301902062000304908c62000aa6565b5460ff16620005d557508c5196611a7380890197881189891017620005c05760e494928f888f62000373620003e3938b8f8f620003fa9c9a620003d296620003ea9b6101209462000d5a903980835282015262000365602488018d62000ace565b939094820152019162000b03565b958c60a06084620003c5620003a562000390604489018e62000ace565b601f19878f03810160608901529d9162000b03565b620003b4606489018e62000ace565b908d87840301608088015262000b03565b9501359101528762000ace565b8c8303870160c08e01529062000b03565b9362000ace565b918884030160e089015262000b03565b9201359060ff8216809203620005bc5784930152039089f08015620005b257600254680100000000000000008110156200059f57858994620004ca948297948762000450866001620004ba980160025562000b24565b999092169882549060031b918a831b921b19161790556200047360015462000b72565b6001556200049e8b51848184516200048d8183896200089b565b810160038152030190208662000aa6565b600160ff198254161790558a519384928392519283916200089b565b8101898152030190209062000aa6565b817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790558451938480927faf640d0f0000000000000000000000000000000000000000000000000000000082525afa928315620005965750849262000558575b5050167fa34547120a941eab43859acf535a121237e5536fd476dccda8174fb1af6926ed8280a280f35b90809250813d83116200058e575b620005728183620009b9565b81010312620001e357620005869062000a5b565b38806200052e565b503d62000566565b513d86823e3d90fd5b60248a604189634e487b7160e01b835252fd5b86513d8a823e3d90fd5b8c80fd5b505060248f60418e634e487b7160e01b835252fd5b8c620006288f928d620006188d86519687967f3dd3b0610000000000000000000000000000000000000000000000000000000088528701526044860190620008c0565b91848303016024850152620008c0565b0390fd5b606488888b51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601060248201527f494e56414c49445f41535345545f4944000000000000000000000000000000006044820152fd5b8a80fd5b87517f245aecd30000000000000000000000000000000000000000000000000000000081523381890152602490fd5b809250888092503d8311620006f3575b620006d78183620009b9565b810103126200068857620006ec8a9162000a5b565b3862000274565b503d620006cb565b89513d8d823e3d90fd5b8880fd5b8680fd5b8480fd5b509034620001e35780600319360112620001e3578267ffffffffffffffff8335818111620001e35762000748903690860162000a3a565b90602435908111620001e3576001600160a01b0391620004ba602062000776620007959436908a0162000a3a565b926200078162000b98565b50818851938285809451938492016200089b565b541682519384809263f93dc4d960e01b82525afa918215620007f85783620007d39493620007d7575b505051918291602083526020830190620008e7565b0390f35b620007ef9293503d8091833e620001a98183620009b9565b903880620007be565b81513d85823e3d90fd5b509034620001e3576020366003190112620001e3578282356001600160a01b03811680910362000872576200083662000b98565b5082519384809263f93dc4d960e01b82525afa918215620007f85783620007d39493620007d757505051918291602083526020830190620008e7565b5080fd5b84903462000872578160031936011262000872576001600160a01b0360209254168152f35b60005b838110620008af5750506000910152565b81810151838201526020016200089e565b90602091620008db815180928185528580860191016200089b565b601f01601f1916010190565b906001600160a01b03825116815260e060ff816200097b620009686200094b620009386200092560208a01516101008060208c01528a0190620008c0565b60408a015189820360408b0152620008c0565b606089015188820360608a0152620008c0565b6080880151608088015260a088015187820360a0890152620008c0565b60c087015186820360c0880152620008c0565b9401511691015290565b610100810190811067ffffffffffffffff821117620009a357604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117620009a357604052565b67ffffffffffffffff8111620009a357601f01601f191660200190565b92919262000a0782620009dc565b9162000a176040519384620009b9565b82948184528183011162000a35578281602093846000960137010152565b600080fd5b9080601f8301121562000a355781602062000a5893359101620009f9565b90565b51906001600160a01b038216820362000a3557565b903590601e198136030182121562000a35570180359067ffffffffffffffff821162000a355760200191813603831362000a3557565b60209062000ac29282604051948386809551938492016200089b565b82019081520301902090565b9035601e198236030181121562000a3557016020813591019167ffffffffffffffff821162000a3557813603831362000a3557565b908060209392818452848401376000828201840152601f01601f1916010190565b60025481101562000b5c5760026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0190600090565b634e487b7160e01b600052603260045260246000fd5b600019811462000b825760010190565b634e487b7160e01b600052601160045260246000fd5b6040519062000ba78262000985565b600060e083828152606080602083015280604083015280808301528360808301528060a083015260c08201520152565b81601f8201121562000a3557805162000bf081620009dc565b9262000c006040519485620009b9565b8184526020828401011162000a355762000a5891602080850191016200089b565b9060208282031262000a3557815167ffffffffffffffff9283821162000a3557016101008183031262000a35576040519262000c5d8462000985565b62000c688262000a5b565b8452602082015181811162000a35578362000c8591840162000bd7565b6020850152604082015181811162000a35578362000ca591840162000bd7565b6040850152606082015181811162000a35578362000cc591840162000bd7565b60608501526080820151608085015260a082015181811162000a35578362000cef91840162000bd7565b60a085015260c082015190811162000a355760e09262000d1191830162000bd7565b60c0840152015160ff8116810362000a355760e082015290565b67ffffffffffffffff8111620009a35760051b60200190565b805182101562000b5c5760209160051b01019056fe60806040523462000c185762001a73803803806200001d8162000c3e565b92833981019060208183031262000c18578051906001600160401b03821162000c185701906101008282031262000c18576200005862000c1d565b82519092906001600160a01b038116810362000c1857835260208101516001600160401b03811162000c1857826200009291830162000c64565b6020840190815260408201519092906001600160401b03811162000c185781620000be91840162000c64565b6040850190815260608301519093906001600160401b03811162000c185782620000ea91850162000c64565b6060860190815260808481015190870190815260a08501519092906001600160401b03811162000c1857846200012291870162000c64565b60a0880190815260c08601519094906001600160401b03811162000c185760e0916200015091880162000c64565b9560c0890196875201519660ff8816880362000c185760e00196875280518651815190916001600160401b038211620006135760035490600182811c9216801562000c0d575b6020831014620005f25781601f84931162000b98575b50602090601f831160011462000b0d5760009262000b01575b50508160011b916000199060031b1c1916176003555b8051906001600160401b0382116200061357600454600181811c9116801562000af6575b6020821014620005f257601f811162000a8c575b50602090601f8311600114620009fd5760ff93929160009183620009f1575b50508160011b916000199060031b1c1916176004555b5195519151925193519451965116946200026162000c1d565b308082526020820183905260408201938452606082019485526080820195865260a0820196875260c0820198895260e0820197909752600580546001600160a01b0319169097179096558051906001600160401b038211620006135760065490600182811c92168015620009e6575b6020831014620005f25781601f84931162000982575b50602090601f83116001146200090857600092620008fc575b50508160011b916000199060031b1c1916176006555b518051906001600160401b038211620006135760075490600182811c92168015620008f1575b6020831014620005f25781601f8493116200088d575b50602090601f8311600114620008135760009262000807575b50508160011b916000199060031b1c1916176007555b518051906001600160401b038211620006135760085490600182811c92168015620007fc575b6020831014620005f25781601f84931162000798575b50602090601f83116001146200071e5760009262000712575b50508160011b916000199060031b1c1916176008555b516009555180519092906001600160401b0381116200061357600a54600181811c9116801562000707575b6020821014620005f257601f8111620006ae575b506020601f821160011462000635578192939460009262000629575b50508160011b916000199060031b1c191617600a555b518051906001600160401b0382116200061357600b54600181811c9116801562000608575b6020821014620005f257601f811162000588575b50602090601f8311600114620004f757918060ff949260e094600092620004eb575b50508160011b916000199060031b1c191617600b555b01511660ff19600c541617600c55604051610d1c908162000cd78239f35b015190503880620004b7565b600b60009081527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9929190601f198516905b8181106200056f575092600192859260e09660ff98961062000555575b505050811b01600b55620004cd565b015160001960f88460031b161c1916905538808062000546565b9293602060018192878601518155019501930162000529565b600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9601f840160051c81019160208510620005e7575b601f0160051c01905b818110620005da575062000495565b60008155600101620005cb565b9091508190620005c2565b634e487b7160e01b600052602260045260246000fd5b90607f169062000481565b634e487b7160e01b600052604160045260246000fd5b01519050388062000446565b600a6000908152600080516020620019f38339815191529190601f198416905b81811062000695575095836001959697106200067b575b505050811b01600a556200045c565b015160001960f88460031b161c191690553880806200066c565b9192602060018192868b01518155019401920162000655565b600a600052600080516020620019f3833981519152601f830160051c81019160208410620006fc575b601f0160051c01905b818110620006ef57506200042a565b60008155600101620006e0565b9091508190620006d7565b90607f169062000416565b015190503880620003d5565b6008600090815260008051602062001a338339815191529350601f198516905b8181106200077f575090846001959493921062000765575b505050811b01600855620003eb565b015160001960f88460031b161c1916905538808062000756565b929360206001819287860151815501950193016200073e565b600860005290915060008051602062001a33833981519152601f840160051c81019160208510620007f1575b90601f859493920160051c01905b818110620007e15750620003bc565b60008155849350600101620007d2565b9091508190620007c4565b91607f1691620003a6565b0151905038806200036a565b6007600090815260008051602062001a138339815191529350601f198516905b8181106200087457509084600195949392106200085a575b505050811b0160075562000380565b015160001960f88460031b161c191690553880806200084b565b9293602060018192878601518155019501930162000833565b600760005290915060008051602062001a13833981519152601f840160051c81019160208510620008e6575b90601f859493920160051c01905b818110620008d6575062000351565b60008155849350600101620008c7565b9091508190620008b9565b91607f16916200033b565b015190503880620002ff565b6006600090815260008051602062001a538339815191529350601f198516905b8181106200096957509084600195949392106200094f575b505050811b0160065562000315565b015160001960f88460031b161c1916905538808062000940565b9293602060018192878601518155019501930162000928565b600660005290915060008051602062001a53833981519152601f840160051c81019160208510620009db575b90601f859493920160051c01905b818110620009cb5750620002e6565b60008155849350600101620009bc565b9091508190620009ae565b91607f1691620002d0565b01519050388062000232565b600460009081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b929190601f198516905b81811062000a73575091600193918560ff9796941062000a59575b505050811b0160045562000248565b015160001960f88460031b161c1916905538808062000a4a565b9293602060018192878601518155019501930162000a2f565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c8101916020851062000aeb575b601f0160051c01905b81811062000ade575062000213565b6000815560010162000acf565b909150819062000ac6565b90607f1690620001ff565b015190503880620001c5565b600360009081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9350601f198516905b81811062000b7f575090846001959493921062000b65575b505050811b01600355620001db565b015160001960f88460031b161c1916905538808062000b56565b9293602060018192878601518155019501930162000b3e565b60036000529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c8101916020851062000c02575b90601f859493920160051c01905b81811062000bf25750620001ac565b6000815584935060010162000be3565b909150819062000bd5565b91607f169162000196565b600080fd5b6040519061010082016001600160401b038111838210176200061357604052565b6040519190601f01601f191682016001600160401b038111838210176200061357604052565b919080601f8401121562000c185782516001600160401b038111620006135760209062000c9a601f8201601f1916830162000c3e565b9281845282828701011162000c185760005b81811062000cc257508260009394955001015290565b858101830151848201840152820162000cac56fe60806040908082526004918236101561001757600080fd5b600091823560e01c90816306fdde0314610a0557508063095ea7b31461095957806318160ddd1461093b57806323b872dd1461082f578063313ce5671461080e57806370a08231146107d957806395d89b41146106bb578063a9059cbb1461068b578063af640d0f14610664578063dd62ed3e1461061c5763f93dc4d91461009e57600080fd5b346106185781600319360112610618578051906100ba82610b6a565b82825260608360e06020948386820152838582015283808201528260808201528360a08201528360c082015201528151936100f485610b6a565b6001600160a01b03956005878154168752845190839160065460019381851c91858116801561060e575b8b841081146105fb578385528492918c9082156105df575050600114610584575b61014b92500382610b9d565b878901908152865190856007549081861c91868116801561057a575b8c84108114610567578386528592918d90821561054b5750506001146104f0575b61019492500383610b9d565b878a01918252875192866008549081871c9187811680156104e6575b8d841081146104d3578388528792918e9082156104b757505060011461045c575b6101dd92500385610b9d565b878b019384526009549560808c019687528951958b89600a5480841c92848216908115610452575b8410811461043f57908f8b939285855291826000146104235750506001146103c9575b61023492500388610b9d565b60a08d019687528a51988c8194600b549182851c958584169182156103bf575b871082146103ac57508f909186959493928e98978952928360001461038d57505050600114610333575b5050500361028c9087610b9d565b60c08a01958652600c5460ff169860e08b01998a5288519b8c9b828d525116908b01525161010080988b01526101208a016102c691610af9565b905190601f1996878b830301908b01526102df91610af9565b905190858982030160808a01526102f591610af9565b915160a08801525190838782030160c088015261031191610af9565b9051918582030160e086015261032691610af9565b915160ff16908301520390f35b91908d9350600b83527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db95b8284106103735750505082010138808061027e565b84929582958583549201015201910190928c928a9461035e565b935094935094505060ff1916838501521515901b82010138808061027e565b846022602492634e487b7160e01b835252fd5b96607f1696610254565b5050600a8a52878d8b847fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a85b85831061040b5750506102349350820101610228565b90919383858354920101520191018e90848b936103f5565b60ff191684820152610234941515881b84010191506102289050565b60248d602288634e487b7160e01b835252fd5b93607f1693610205565b505060088852848b89887ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b85831061049e5750506101dd93508201016101d1565b80919294505483858b0101520191018c90888893610488565b60ff1916848201526101dd941515861b84010191506101d19050565b60248b60228c634e487b7160e01b835252fd5b92607f16926101b0565b505060078752828a88877fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6885b8583106105325750506101949350820101610188565b8091929450548385890101520191018b9087869361051c565b60ff191684820152610194941515881b84010191506101889050565b60248a60228b634e487b7160e01b835252fd5b92607f1692610167565b505060068652818987867ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b8583106105c657505061014b935082010161013f565b8091929450548385880101520191018a908685936105b0565b60ff19168482015261014b941515871b840101915061013f9050565b60248960228a634e487b7160e01b835252fd5b92607f169261011e565b5080fd5b503461061857806003193601126106185780602092610639610b39565b610641610b54565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b50346106185781600319360112610618576020906001600160a01b03600554169051908152f35b50346106185780600319360112610618576020906106b46106aa610b39565b6024359033610bbf565b5160018152f35b5090346107d657806003193601126107d65781519181845492600184811c918186169586156107cc575b60209687851081146107b9579087899a92868b999a9b52918260001461078f575050600114610734575b858861073089610721848a0385610b9d565b51928284938452830190610af9565b0390f35b815286935091907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82841061077757505050820101816107216107303861070f565b8054848a01860152889550879490930192810161075d565b60ff19168882015294151560051b870190940194508593506107219250610730915038905061070f565b60248360228c634e487b7160e01b835252fd5b92607f16926106e5565b80fd5b503461061857602036600319011261061857806020926001600160a01b036107ff610b39565b16815280845220549051908152f35b503461061857816003193601126106185760209060ff600c54169051908152f35b509190346107d65760603660031901126107d65761084b610b39565b610853610b54565b91604435936001600160a01b038316808352600160205286832033845260205286832054916000198303610890575b6020886106b4898989610bbf565b8683106108f65781156108e05733156108ca575082526001602090815286832033845281529186902090859003905582906106b438610882565b60249084895191634a1406b160e11b8352820152fd5b6024908489519163e602df0560e01b8352820152fd5b87517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018790528291506060010390fd5b50346106185781600319360112610618576020906002549051908152f35b508234610a015781600319360112610a0157610973610b39565b6024359033156109eb576001600160a01b03169182156109d557508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b60249085855191634a1406b160e11b8352820152fd5b6024838686519163e602df0560e01b8352820152fd5b8280fd5b92919050346106185781600319360112610618578160035492600184811c91818616958615610aef575b60209687851081146107b9578899509688969785829a529182600014610ac8575050600114610a6c575b5050506107309291610721910385610b9d565b9190869350600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610ab05750505082010181610721610730610a59565b8054848a018601528895508794909301928101610a97565b60ff19168782015293151560051b8601909301935084925061072191506107309050610a59565b92607f1692610a2f565b919082519283825260005b848110610b25575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610b04565b600435906001600160a01b0382168203610b4f57565b600080fd5b602435906001600160a01b0382168203610b4f57565b610100810190811067ffffffffffffffff821117610b8757604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610b8757604052565b916001600160a01b03808416928315610cb55716928315610c845760009083825281602052604082205490838210610c39575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b6040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60246040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152fd5b60246040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152fdfea26469706673582212206b4f65e5e60fbb8ec835599c3a748ff9cb398443fec41a371c916da9829d6b9964736f6c63430008140033c65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8a66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688f3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3f652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3fa26469706673582212208079d39106382b3e71f76e99228a7979d9101d1fad72ff4b0f6db7ee0d57055964736f6c63430008140033",
  "deployedBytecode": "0x608060408181526004803610156200001657600080fd5b600092833560e01c9081631c94c77b1462000876575080634e1d7bac14620008025780635cbf7e551462000711578063caf87b8e14620001e75763eadeb9a3146200006057600080fd5b34620001e35782600319360112620001e357916001908154620000838162000d2b565b946200009285519687620009b9565b818652601f19620000a38362000d2b565b01835b818110620001c3575050825b8281106200011d57505050825192602080850191818652865180935281818701918460051b880101970193905b838210620000ed5786880387f35b909192939483806200010b839a603f198b82030186528951620008e7565b999701959493919091019101620000df565b6001600160a01b03848362000135849a989a62000b24565b919054918a51948593849263f93dc4d960e01b845260031b1c165afa908115620001b95790620001899291869162000192575b5062000175828862000d44565b5262000182818762000d44565b5062000b72565b959395620000b2565b620001b291503d8088833e620001a98183620009b9565b81019062000c21565b3862000168565b87513d87823e3d90fd5b602090620001d398969862000b98565b82828901015201969496620000a6565b8280fd5b509034620001e35760031991602036840181136200070d5781359367ffffffffffffffff808611620007095785840190610100908184893603011262000705576001600160a01b039786868a8c54168a51928380927f8da5cb5b0000000000000000000000000000000000000000000000000000000082525afa908115620006fb57908a918c91620006bb575b501633036200068c578335928984168094036200068857836200062c5790869493929160a4820194620002a8868262000a70565b3690620002b592620009f9565b9560c48401620002c6818462000a70565b3690620002d392620009f9565b998d518a818b8181519e8f92019e8f91620002ee926200089b565b8101600381520301902062000304908c62000aa6565b5460ff16620005d557508c5196611a7380890197881189891017620005c05760e494928f888f62000373620003e3938b8f8f620003fa9c9a620003d296620003ea9b6101209462000d5a903980835282015262000365602488018d62000ace565b939094820152019162000b03565b958c60a06084620003c5620003a562000390604489018e62000ace565b601f19878f03810160608901529d9162000b03565b620003b4606489018e62000ace565b908d87840301608088015262000b03565b9501359101528762000ace565b8c8303870160c08e01529062000b03565b9362000ace565b918884030160e089015262000b03565b9201359060ff8216809203620005bc5784930152039089f08015620005b257600254680100000000000000008110156200059f57858994620004ca948297948762000450866001620004ba980160025562000b24565b999092169882549060031b918a831b921b19161790556200047360015462000b72565b6001556200049e8b51848184516200048d8183896200089b565b810160038152030190208662000aa6565b600160ff198254161790558a519384928392519283916200089b565b8101898152030190209062000aa6565b817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790558451938480927faf640d0f0000000000000000000000000000000000000000000000000000000082525afa928315620005965750849262000558575b5050167fa34547120a941eab43859acf535a121237e5536fd476dccda8174fb1af6926ed8280a280f35b90809250813d83116200058e575b620005728183620009b9565b81010312620001e357620005869062000a5b565b38806200052e565b503d62000566565b513d86823e3d90fd5b60248a604189634e487b7160e01b835252fd5b86513d8a823e3d90fd5b8c80fd5b505060248f60418e634e487b7160e01b835252fd5b8c620006288f928d620006188d86519687967f3dd3b0610000000000000000000000000000000000000000000000000000000088528701526044860190620008c0565b91848303016024850152620008c0565b0390fd5b606488888b51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601060248201527f494e56414c49445f41535345545f4944000000000000000000000000000000006044820152fd5b8a80fd5b87517f245aecd30000000000000000000000000000000000000000000000000000000081523381890152602490fd5b809250888092503d8311620006f3575b620006d78183620009b9565b810103126200068857620006ec8a9162000a5b565b3862000274565b503d620006cb565b89513d8d823e3d90fd5b8880fd5b8680fd5b8480fd5b509034620001e35780600319360112620001e3578267ffffffffffffffff8335818111620001e35762000748903690860162000a3a565b90602435908111620001e3576001600160a01b0391620004ba602062000776620007959436908a0162000a3a565b926200078162000b98565b50818851938285809451938492016200089b565b541682519384809263f93dc4d960e01b82525afa918215620007f85783620007d39493620007d7575b505051918291602083526020830190620008e7565b0390f35b620007ef9293503d8091833e620001a98183620009b9565b903880620007be565b81513d85823e3d90fd5b509034620001e3576020366003190112620001e3578282356001600160a01b03811680910362000872576200083662000b98565b5082519384809263f93dc4d960e01b82525afa918215620007f85783620007d39493620007d757505051918291602083526020830190620008e7565b5080fd5b84903462000872578160031936011262000872576001600160a01b0360209254168152f35b60005b838110620008af5750506000910152565b81810151838201526020016200089e565b90602091620008db815180928185528580860191016200089b565b601f01601f1916010190565b906001600160a01b03825116815260e060ff816200097b620009686200094b620009386200092560208a01516101008060208c01528a0190620008c0565b60408a015189820360408b0152620008c0565b606089015188820360608a0152620008c0565b6080880151608088015260a088015187820360a0890152620008c0565b60c087015186820360c0880152620008c0565b9401511691015290565b610100810190811067ffffffffffffffff821117620009a357604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117620009a357604052565b67ffffffffffffffff8111620009a357601f01601f191660200190565b92919262000a0782620009dc565b9162000a176040519384620009b9565b82948184528183011162000a35578281602093846000960137010152565b600080fd5b9080601f8301121562000a355781602062000a5893359101620009f9565b90565b51906001600160a01b038216820362000a3557565b903590601e198136030182121562000a35570180359067ffffffffffffffff821162000a355760200191813603831362000a3557565b60209062000ac29282604051948386809551938492016200089b565b82019081520301902090565b9035601e198236030181121562000a3557016020813591019167ffffffffffffffff821162000a3557813603831362000a3557565b908060209392818452848401376000828201840152601f01601f1916010190565b60025481101562000b5c5760026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0190600090565b634e487b7160e01b600052603260045260246000fd5b600019811462000b825760010190565b634e487b7160e01b600052601160045260246000fd5b6040519062000ba78262000985565b600060e083828152606080602083015280604083015280808301528360808301528060a083015260c08201520152565b81601f8201121562000a3557805162000bf081620009dc565b9262000c006040519485620009b9565b8184526020828401011162000a355762000a5891602080850191016200089b565b9060208282031262000a3557815167ffffffffffffffff9283821162000a3557016101008183031262000a35576040519262000c5d8462000985565b62000c688262000a5b565b8452602082015181811162000a35578362000c8591840162000bd7565b6020850152604082015181811162000a35578362000ca591840162000bd7565b6040850152606082015181811162000a35578362000cc591840162000bd7565b60608501526080820151608085015260a082015181811162000a35578362000cef91840162000bd7565b60a085015260c082015190811162000a355760e09262000d1191830162000bd7565b60c0840152015160ff8116810362000a355760e082015290565b67ffffffffffffffff8111620009a35760051b60200190565b805182101562000b5c5760209160051b01019056fe60806040523462000c185762001a73803803806200001d8162000c3e565b92833981019060208183031262000c18578051906001600160401b03821162000c185701906101008282031262000c18576200005862000c1d565b82519092906001600160a01b038116810362000c1857835260208101516001600160401b03811162000c1857826200009291830162000c64565b6020840190815260408201519092906001600160401b03811162000c185781620000be91840162000c64565b6040850190815260608301519093906001600160401b03811162000c185782620000ea91850162000c64565b6060860190815260808481015190870190815260a08501519092906001600160401b03811162000c1857846200012291870162000c64565b60a0880190815260c08601519094906001600160401b03811162000c185760e0916200015091880162000c64565b9560c0890196875201519660ff8816880362000c185760e00196875280518651815190916001600160401b038211620006135760035490600182811c9216801562000c0d575b6020831014620005f25781601f84931162000b98575b50602090601f831160011462000b0d5760009262000b01575b50508160011b916000199060031b1c1916176003555b8051906001600160401b0382116200061357600454600181811c9116801562000af6575b6020821014620005f257601f811162000a8c575b50602090601f8311600114620009fd5760ff93929160009183620009f1575b50508160011b916000199060031b1c1916176004555b5195519151925193519451965116946200026162000c1d565b308082526020820183905260408201938452606082019485526080820195865260a0820196875260c0820198895260e0820197909752600580546001600160a01b0319169097179096558051906001600160401b038211620006135760065490600182811c92168015620009e6575b6020831014620005f25781601f84931162000982575b50602090601f83116001146200090857600092620008fc575b50508160011b916000199060031b1c1916176006555b518051906001600160401b038211620006135760075490600182811c92168015620008f1575b6020831014620005f25781601f8493116200088d575b50602090601f8311600114620008135760009262000807575b50508160011b916000199060031b1c1916176007555b518051906001600160401b038211620006135760085490600182811c92168015620007fc575b6020831014620005f25781601f84931162000798575b50602090601f83116001146200071e5760009262000712575b50508160011b916000199060031b1c1916176008555b516009555180519092906001600160401b0381116200061357600a54600181811c9116801562000707575b6020821014620005f257601f8111620006ae575b506020601f821160011462000635578192939460009262000629575b50508160011b916000199060031b1c191617600a555b518051906001600160401b0382116200061357600b54600181811c9116801562000608575b6020821014620005f257601f811162000588575b50602090601f8311600114620004f757918060ff949260e094600092620004eb575b50508160011b916000199060031b1c191617600b555b01511660ff19600c541617600c55604051610d1c908162000cd78239f35b015190503880620004b7565b600b60009081527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9929190601f198516905b8181106200056f575092600192859260e09660ff98961062000555575b505050811b01600b55620004cd565b015160001960f88460031b161c1916905538808062000546565b9293602060018192878601518155019501930162000529565b600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9601f840160051c81019160208510620005e7575b601f0160051c01905b818110620005da575062000495565b60008155600101620005cb565b9091508190620005c2565b634e487b7160e01b600052602260045260246000fd5b90607f169062000481565b634e487b7160e01b600052604160045260246000fd5b01519050388062000446565b600a6000908152600080516020620019f38339815191529190601f198416905b81811062000695575095836001959697106200067b575b505050811b01600a556200045c565b015160001960f88460031b161c191690553880806200066c565b9192602060018192868b01518155019401920162000655565b600a600052600080516020620019f3833981519152601f830160051c81019160208410620006fc575b601f0160051c01905b818110620006ef57506200042a565b60008155600101620006e0565b9091508190620006d7565b90607f169062000416565b015190503880620003d5565b6008600090815260008051602062001a338339815191529350601f198516905b8181106200077f575090846001959493921062000765575b505050811b01600855620003eb565b015160001960f88460031b161c1916905538808062000756565b929360206001819287860151815501950193016200073e565b600860005290915060008051602062001a33833981519152601f840160051c81019160208510620007f1575b90601f859493920160051c01905b818110620007e15750620003bc565b60008155849350600101620007d2565b9091508190620007c4565b91607f1691620003a6565b0151905038806200036a565b6007600090815260008051602062001a138339815191529350601f198516905b8181106200087457509084600195949392106200085a575b505050811b0160075562000380565b015160001960f88460031b161c191690553880806200084b565b9293602060018192878601518155019501930162000833565b600760005290915060008051602062001a13833981519152601f840160051c81019160208510620008e6575b90601f859493920160051c01905b818110620008d6575062000351565b60008155849350600101620008c7565b9091508190620008b9565b91607f16916200033b565b015190503880620002ff565b6006600090815260008051602062001a538339815191529350601f198516905b8181106200096957509084600195949392106200094f575b505050811b0160065562000315565b015160001960f88460031b161c1916905538808062000940565b9293602060018192878601518155019501930162000928565b600660005290915060008051602062001a53833981519152601f840160051c81019160208510620009db575b90601f859493920160051c01905b818110620009cb5750620002e6565b60008155849350600101620009bc565b9091508190620009ae565b91607f1691620002d0565b01519050388062000232565b600460009081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b929190601f198516905b81811062000a73575091600193918560ff9796941062000a59575b505050811b0160045562000248565b015160001960f88460031b161c1916905538808062000a4a565b9293602060018192878601518155019501930162000a2f565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c8101916020851062000aeb575b601f0160051c01905b81811062000ade575062000213565b6000815560010162000acf565b909150819062000ac6565b90607f1690620001ff565b015190503880620001c5565b600360009081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9350601f198516905b81811062000b7f575090846001959493921062000b65575b505050811b01600355620001db565b015160001960f88460031b161c1916905538808062000b56565b9293602060018192878601518155019501930162000b3e565b60036000529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c8101916020851062000c02575b90601f859493920160051c01905b81811062000bf25750620001ac565b6000815584935060010162000be3565b909150819062000bd5565b91607f169162000196565b600080fd5b6040519061010082016001600160401b038111838210176200061357604052565b6040519190601f01601f191682016001600160401b038111838210176200061357604052565b919080601f8401121562000c185782516001600160401b038111620006135760209062000c9a601f8201601f1916830162000c3e565b9281845282828701011162000c185760005b81811062000cc257508260009394955001015290565b858101830151848201840152820162000cac56fe60806040908082526004918236101561001757600080fd5b600091823560e01c90816306fdde0314610a0557508063095ea7b31461095957806318160ddd1461093b57806323b872dd1461082f578063313ce5671461080e57806370a08231146107d957806395d89b41146106bb578063a9059cbb1461068b578063af640d0f14610664578063dd62ed3e1461061c5763f93dc4d91461009e57600080fd5b346106185781600319360112610618578051906100ba82610b6a565b82825260608360e06020948386820152838582015283808201528260808201528360a08201528360c082015201528151936100f485610b6a565b6001600160a01b03956005878154168752845190839160065460019381851c91858116801561060e575b8b841081146105fb578385528492918c9082156105df575050600114610584575b61014b92500382610b9d565b878901908152865190856007549081861c91868116801561057a575b8c84108114610567578386528592918d90821561054b5750506001146104f0575b61019492500383610b9d565b878a01918252875192866008549081871c9187811680156104e6575b8d841081146104d3578388528792918e9082156104b757505060011461045c575b6101dd92500385610b9d565b878b019384526009549560808c019687528951958b89600a5480841c92848216908115610452575b8410811461043f57908f8b939285855291826000146104235750506001146103c9575b61023492500388610b9d565b60a08d019687528a51988c8194600b549182851c958584169182156103bf575b871082146103ac57508f909186959493928e98978952928360001461038d57505050600114610333575b5050500361028c9087610b9d565b60c08a01958652600c5460ff169860e08b01998a5288519b8c9b828d525116908b01525161010080988b01526101208a016102c691610af9565b905190601f1996878b830301908b01526102df91610af9565b905190858982030160808a01526102f591610af9565b915160a08801525190838782030160c088015261031191610af9565b9051918582030160e086015261032691610af9565b915160ff16908301520390f35b91908d9350600b83527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db95b8284106103735750505082010138808061027e565b84929582958583549201015201910190928c928a9461035e565b935094935094505060ff1916838501521515901b82010138808061027e565b846022602492634e487b7160e01b835252fd5b96607f1696610254565b5050600a8a52878d8b847fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a85b85831061040b5750506102349350820101610228565b90919383858354920101520191018e90848b936103f5565b60ff191684820152610234941515881b84010191506102289050565b60248d602288634e487b7160e01b835252fd5b93607f1693610205565b505060088852848b89887ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b85831061049e5750506101dd93508201016101d1565b80919294505483858b0101520191018c90888893610488565b60ff1916848201526101dd941515861b84010191506101d19050565b60248b60228c634e487b7160e01b835252fd5b92607f16926101b0565b505060078752828a88877fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6885b8583106105325750506101949350820101610188565b8091929450548385890101520191018b9087869361051c565b60ff191684820152610194941515881b84010191506101889050565b60248a60228b634e487b7160e01b835252fd5b92607f1692610167565b505060068652818987867ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b8583106105c657505061014b935082010161013f565b8091929450548385880101520191018a908685936105b0565b60ff19168482015261014b941515871b840101915061013f9050565b60248960228a634e487b7160e01b835252fd5b92607f169261011e565b5080fd5b503461061857806003193601126106185780602092610639610b39565b610641610b54565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b50346106185781600319360112610618576020906001600160a01b03600554169051908152f35b50346106185780600319360112610618576020906106b46106aa610b39565b6024359033610bbf565b5160018152f35b5090346107d657806003193601126107d65781519181845492600184811c918186169586156107cc575b60209687851081146107b9579087899a92868b999a9b52918260001461078f575050600114610734575b858861073089610721848a0385610b9d565b51928284938452830190610af9565b0390f35b815286935091907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82841061077757505050820101816107216107303861070f565b8054848a01860152889550879490930192810161075d565b60ff19168882015294151560051b870190940194508593506107219250610730915038905061070f565b60248360228c634e487b7160e01b835252fd5b92607f16926106e5565b80fd5b503461061857602036600319011261061857806020926001600160a01b036107ff610b39565b16815280845220549051908152f35b503461061857816003193601126106185760209060ff600c54169051908152f35b509190346107d65760603660031901126107d65761084b610b39565b610853610b54565b91604435936001600160a01b038316808352600160205286832033845260205286832054916000198303610890575b6020886106b4898989610bbf565b8683106108f65781156108e05733156108ca575082526001602090815286832033845281529186902090859003905582906106b438610882565b60249084895191634a1406b160e11b8352820152fd5b6024908489519163e602df0560e01b8352820152fd5b87517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018790528291506060010390fd5b50346106185781600319360112610618576020906002549051908152f35b508234610a015781600319360112610a0157610973610b39565b6024359033156109eb576001600160a01b03169182156109d557508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b60249085855191634a1406b160e11b8352820152fd5b6024838686519163e602df0560e01b8352820152fd5b8280fd5b92919050346106185781600319360112610618578160035492600184811c91818616958615610aef575b60209687851081146107b9578899509688969785829a529182600014610ac8575050600114610a6c575b5050506107309291610721910385610b9d565b9190869350600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610ab05750505082010181610721610730610a59565b8054848a018601528895508794909301928101610a97565b60ff19168782015293151560051b8601909301935084925061072191506107309050610a59565b92607f1692610a2f565b919082519283825260005b848110610b25575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610b04565b600435906001600160a01b0382168203610b4f57565b600080fd5b602435906001600160a01b0382168203610b4f57565b610100810190811067ffffffffffffffff821117610b8757604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610b8757604052565b916001600160a01b03808416928315610cb55716928315610c845760009083825281602052604082205490838210610c39575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b6040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60246040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152fd5b60246040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152fdfea26469706673582212206b4f65e5e60fbb8ec835599c3a748ff9cb398443fec41a371c916da9829d6b9964736f6c63430008140033c65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8a66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688f3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3f652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3fa26469706673582212208079d39106382b3e71f76e99228a7979d9101d1fad72ff4b0f6db7ee0d57055964736f6c63430008140033",
  "devdoc": {
    "errors": {
      "AssetExists(string,string)": [
        {
          "params": {
            "blockchainAddress": "Address of the asset on the native blockchain",
            "blockchainName": "Name of the native blockchain"
          }
        }
      ],
      "NotOwner(address)": [
        {
          "params": {
            "sender": "The address of the account calling the function"
          }
        }
      ]
    },
    "events": {
      "AssetCreated(address)": {
        "params": {
          "id": "The address of the asset on the portal chain"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_portalToken": "Address of the PORTAL token contract on portal chain"
        }
      },
      "listAssets()": {
        "returns": {
          "_0": "The list of all assets in the order they were created"
        }
      },
      "retrieveAsset(address)": {
        "params": {
          "id": "The address of the asset on the portal chain"
        },
        "returns": {
          "_0": "The asset whose id was provided"
        }
      },
      "retrieveAssetByNativeProps(string,string)": {
        "params": {
          "blockchainAddress": "Address of the asset on the native blockchain",
          "blockchainName": "Name of the native blockchain"
        },
        "returns": {
          "_0": "The asset whose native blockchain properties were provided"
        }
      }
    },
    "title": "AssetManagement Manages assets in the Portal ecosystem. Assets in the Portal ecosystem are immutable and may not be updated or deleted once created. The contract maintains a list of all assets created in the order they were created. It also maintains a mapping of assets by their native blockchain name and address to enable quick lookups of assets based on native blockchain details.",
    "version": 1
  },
  "userdoc": {
    "errors": {
      "AssetExists(string,string)": [
        {
          "notice": "Thrown when an asset has already been created"
        }
      ],
      "NotOwner(address)": [
        {
          "notice": "Thrown when the caller is not the owner of the contract"
        }
      ]
    },
    "events": {
      "AssetCreated(address)": {
        "notice": "Fires when a new asset is created"
      }
    },
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Initializes the asset management contract"
      },
      "createAsset((address,string,string,string,uint256,string,string,uint8))": {
        "notice": "Creates a new asset. NOTE: This method is only callable by the owner of the contract."
      },
      "listAssets()": {
        "notice": "Lists all assets on the portal chain in the order they were created"
      },
      "portalToken()": {
        "notice": "Address of the PORTAL Token contract on portal chain"
      },
      "retrieveAsset(address)": {
        "notice": "Retrieves the specified asset"
      },
      "retrieveAssetByNativeProps(string,string)": {
        "notice": "Retrieves an asset using native blockchain properties"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10216,
        "contract": "contracts/AssetManagement.sol:AssetManagement",
        "label": "portalToken",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IPortalToken)13202"
      },
      {
        "astId": 10219,
        "contract": "contracts/AssetManagement.sol:AssetManagement",
        "label": "assetCount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 10224,
        "contract": "contracts/AssetManagement.sol:AssetManagement",
        "label": "assets",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_contract(Asset)10200)dyn_storage"
      },
      {
        "astId": 10231,
        "contract": "contracts/AssetManagement.sol:AssetManagement",
        "label": "existingAssets",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_bool))"
      },
      {
        "astId": 10239,
        "contract": "contracts/AssetManagement.sol:AssetManagement",
        "label": "assetsByNativeProps",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_contract(Asset)10200))"
      }
    ],
    "types": {
      "t_array(t_contract(Asset)10200)dyn_storage": {
        "base": "t_contract(Asset)10200",
        "encoding": "dynamic_array",
        "label": "contract Asset[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(Asset)10200": {
        "encoding": "inplace",
        "label": "contract Asset",
        "numberOfBytes": "20"
      },
      "t_contract(IPortalToken)13202": {
        "encoding": "inplace",
        "label": "contract IPortalToken",
        "numberOfBytes": "20"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_string_memory_ptr,t_contract(Asset)10200)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => contract Asset)",
        "numberOfBytes": "32",
        "value": "t_contract(Asset)10200"
      },
      "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_bool))": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => mapping(string => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_contract(Asset)10200))": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => mapping(string => contract Asset))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_contract(Asset)10200)"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}